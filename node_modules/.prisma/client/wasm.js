
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  phone_number: 'phone_number',
  profile_photo: 'profile_photo',
  valid_id: 'valid_id',
  user_location: 'user_location',
  created_at: 'created_at',
  is_verified: 'is_verified',
  password: 'password',
  userName: 'userName',
  is_activated: 'is_activated',
  birthday: 'birthday',
  exact_location: 'exact_location',
  user_reason: 'user_reason'
};

exports.Prisma.ServiceProviderDetailsScalarFieldEnum = {
  provider_id: 'provider_id',
  provider_first_name: 'provider_first_name',
  provider_last_name: 'provider_last_name',
  provider_email: 'provider_email',
  provider_phone_number: 'provider_phone_number',
  provider_profile_photo: 'provider_profile_photo',
  provider_valid_id: 'provider_valid_id',
  provider_isVerified: 'provider_isVerified',
  created_at: 'created_at',
  provider_rating: 'provider_rating',
  provider_location: 'provider_location',
  provider_uli: 'provider_uli',
  provider_password: 'provider_password',
  provider_userName: 'provider_userName',
  provider_isActivated: 'provider_isActivated',
  provider_birthday: 'provider_birthday',
  provider_exact_location: 'provider_exact_location',
  provider_reason: 'provider_reason'
};

exports.Prisma.CertificateScalarFieldEnum = {
  certificate_id: 'certificate_id',
  certificate_name: 'certificate_name',
  certificate_file_path: 'certificate_file_path',
  expiry_date: 'expiry_date',
  provider_id: 'provider_id',
  certificate_number: 'certificate_number',
  certificate_status: 'certificate_status',
  created_at: 'created_at',
  certificate_reason: 'certificate_reason'
};

exports.Prisma.ServiceListingScalarFieldEnum = {
  service_id: 'service_id',
  service_title: 'service_title',
  service_description: 'service_description',
  service_startingprice: 'service_startingprice',
  provider_id: 'provider_id',
  servicelisting_isActive: 'servicelisting_isActive'
};

exports.Prisma.ServicePhotoScalarFieldEnum = {
  id: 'id',
  imageUrl: 'imageUrl',
  service_id: 'service_id',
  uploadedAt: 'uploadedAt'
};

exports.Prisma.ServiceCategoryScalarFieldEnum = {
  category_id: 'category_id',
  category_name: 'category_name'
};

exports.Prisma.ProviderProfessionScalarFieldEnum = {
  id: 'id',
  provider_id: 'provider_id',
  profession: 'profession',
  experience: 'experience'
};

exports.Prisma.SpecificServiceScalarFieldEnum = {
  specific_service_id: 'specific_service_id',
  specific_service_title: 'specific_service_title',
  specific_service_description: 'specific_service_description',
  service_id: 'service_id',
  category_id: 'category_id'
};

exports.Prisma.CoveredServiceScalarFieldEnum = {
  covered_service_id: 'covered_service_id',
  specific_service_id: 'specific_service_id',
  certificate_id: 'certificate_id'
};

exports.Prisma.AvailabilityScalarFieldEnum = {
  availability_id: 'availability_id',
  dayOfWeek: 'dayOfWeek',
  startTime: 'startTime',
  endTime: 'endTime',
  provider_id: 'provider_id',
  availability_isActive: 'availability_isActive'
};

exports.Prisma.AppointmentScalarFieldEnum = {
  appointment_id: 'appointment_id',
  customer_id: 'customer_id',
  provider_id: 'provider_id',
  appointment_status: 'appointment_status',
  scheduled_date: 'scheduled_date',
  repairDescription: 'repairDescription',
  created_at: 'created_at',
  final_price: 'final_price',
  availability_id: 'availability_id',
  service_id: 'service_id',
  cancellation_reason: 'cancellation_reason'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  rating_value: 'rating_value',
  rating_comment: 'rating_comment',
  rating_photo: 'rating_photo',
  appointment_id: 'appointment_id',
  user_id: 'user_id',
  provider_id: 'provider_id',
  rated_by: 'rated_by',
  created_at: 'created_at'
};

exports.Prisma.OTPVerificationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  otp: 'otp',
  expires_at: 'expires_at',
  created_at: 'created_at'
};

exports.Prisma.AdminScalarFieldEnum = {
  admin_id: 'admin_id',
  admin_username: 'admin_username',
  admin_email: 'admin_email',
  admin_password: 'admin_password',
  admin_name: 'admin_name',
  admin_role: 'admin_role',
  created_at: 'created_at',
  last_login: 'last_login',
  is_active: 'is_active',
  must_change_password: 'must_change_password'
};

exports.Prisma.ConversationScalarFieldEnum = {
  conversation_id: 'conversation_id',
  appointment_id: 'appointment_id',
  customer_id: 'customer_id',
  provider_id: 'provider_id',
  status: 'status',
  last_message_at: 'last_message_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MessageScalarFieldEnum = {
  message_id: 'message_id',
  conversation_id: 'conversation_id',
  sender_id: 'sender_id',
  sender_type: 'sender_type',
  message_type: 'message_type',
  content: 'content',
  attachment_url: 'attachment_url',
  is_read: 'is_read',
  is_edited: 'is_edited',
  edited_at: 'edited_at',
  replied_to_id: 'replied_to_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  ServiceProviderDetails: 'ServiceProviderDetails',
  Certificate: 'Certificate',
  ServiceListing: 'ServiceListing',
  ServicePhoto: 'ServicePhoto',
  ServiceCategory: 'ServiceCategory',
  ProviderProfession: 'ProviderProfession',
  SpecificService: 'SpecificService',
  CoveredService: 'CoveredService',
  Availability: 'Availability',
  Appointment: 'Appointment',
  Rating: 'Rating',
  OTPVerification: 'OTPVerification',
  Admin: 'Admin',
  Conversation: 'Conversation',
  Message: 'Message'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Kurt Jhaive\\Desktop\\Fixmo-BACKEND-1\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Kurt Jhaive\\Desktop\\Fixmo-BACKEND-1\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  user_id           Int            @id @default(autoincrement())\n  first_name        String\n  last_name         String\n  email             String         @unique\n  phone_number      String         @unique\n  profile_photo     String?\n  valid_id          String?\n  user_location     String?\n  created_at        DateTime       @default(now())\n  is_verified       Boolean        @default(false)\n  password          String\n  userName          String         @unique\n  is_activated      Boolean        @default(true)\n  birthday          DateTime?\n  exact_location    String?\n  user_reason       String?\n  user_appointments Appointment[]\n  user_rating       Rating[]\n  conversations     Conversation[]\n}\n\nmodel ServiceProviderDetails {\n  provider_id             Int                  @id @default(autoincrement())\n  provider_first_name     String\n  provider_last_name      String\n  provider_email          String               @unique\n  provider_phone_number   String               @unique\n  provider_profile_photo  String?\n  provider_valid_id       String?\n  provider_isVerified     Boolean              @default(false)\n  created_at              DateTime             @default(now())\n  provider_rating         Float                @default(0.0)\n  provider_location       String?\n  provider_uli            String               @unique\n  provider_password       String\n  provider_userName       String               @unique\n  provider_isActivated    Boolean              @default(true)\n  provider_birthday       DateTime?\n  provider_exact_location String?\n  provider_reason         String?\n  provider_appointments   Appointment[]\n  provider_availability   Availability[]\n  provider_certificates   Certificate[]\n  provider_ratings        Rating[]\n  provider_services       ServiceListing[]\n  conversations           Conversation[]\n  provider_professions    ProviderProfession[]\n}\n\nmodel Certificate {\n  certificate_id        Int                    @id @default(autoincrement())\n  certificate_name      String\n  certificate_file_path String\n  expiry_date           DateTime?\n  provider_id           Int\n  certificate_number    String                 @unique\n  certificate_status    String                 @default(\"Pending\")\n  created_at            DateTime               @default(now())\n  provider              ServiceProviderDetails @relation(fields: [provider_id], references: [provider_id])\n  certificate_reason    String?\n  CoveredService        CoveredService[]\n}\n\nmodel ServiceListing {\n  service_id              Int                    @id @default(autoincrement())\n  service_title           String\n  service_description     String\n  service_startingprice   Float\n  provider_id             Int\n  servicelisting_isActive Boolean                @default(true)\n  service_photos          ServicePhoto[]\n  appointments            Appointment[]\n  serviceProvider         ServiceProviderDetails @relation(fields: [provider_id], references: [provider_id])\n  specific_services       SpecificService[]\n}\n\nmodel ServicePhoto {\n  id         Int            @id @default(autoincrement())\n  imageUrl   String // Cloudinary/S3 URL\n  service    ServiceListing @relation(fields: [service_id], references: [service_id])\n  service_id Int\n  uploadedAt DateTime       @default(now())\n}\n\nmodel ServiceCategory {\n  category_id       Int               @id @default(autoincrement())\n  category_name     String\n  specific_services SpecificService[]\n}\n\nmodel ProviderProfession {\n  id          Int                    @id @default(autoincrement())\n  provider_id Int\n  profession  String\n  experience  String // or Int for years\n  provider    ServiceProviderDetails @relation(fields: [provider_id], references: [provider_id])\n\n  @@unique([provider_id, profession]) // prevents duplicates of the same profession\n}\n\nmodel SpecificService {\n  specific_service_id          Int              @id @default(autoincrement())\n  specific_service_title       String\n  specific_service_description String\n  service_id                   Int\n  category_id                  Int\n  covered_by_certificates      CoveredService[]\n  category                     ServiceCategory  @relation(fields: [category_id], references: [category_id])\n  serviceListing               ServiceListing   @relation(fields: [service_id], references: [service_id])\n}\n\nmodel CoveredService {\n  covered_service_id  Int             @id @default(autoincrement())\n  specific_service_id Int\n  certificate_id      Int\n  certificate         Certificate     @relation(fields: [certificate_id], references: [certificate_id])\n  specific_service    SpecificService @relation(fields: [specific_service_id], references: [specific_service_id])\n}\n\nmodel Availability {\n  availability_id       Int                    @id @default(autoincrement())\n  dayOfWeek             String\n  startTime             String\n  endTime               String\n  provider_id           Int\n  availability_isActive Boolean                @default(true)\n  appointments          Appointment[]\n  serviceProvider       ServiceProviderDetails @relation(fields: [provider_id], references: [provider_id])\n}\n\nmodel Appointment {\n  appointment_id      Int                    @id @default(autoincrement())\n  customer_id         Int\n  provider_id         Int\n  appointment_status  String\n  scheduled_date      DateTime\n  repairDescription   String?\n  created_at          DateTime               @default(now())\n  final_price         Float?\n  availability_id     Int\n  service_id          Int\n  cancellation_reason String?\n  availability        Availability           @relation(fields: [availability_id], references: [availability_id])\n  customer            User                   @relation(fields: [customer_id], references: [user_id])\n  serviceProvider     ServiceProviderDetails @relation(fields: [provider_id], references: [provider_id])\n  service             ServiceListing         @relation(fields: [service_id], references: [service_id])\n  appointment_rating  Rating[]\n  conversation        Conversation?\n}\n\nmodel Rating {\n  id              Int                    @id @default(autoincrement())\n  rating_value    Int\n  rating_comment  String?\n  rating_photo    String? // New field for review photo\n  appointment_id  Int\n  user_id         Int\n  provider_id     Int\n  rated_by        String // 'customer' or 'provider'\n  created_at      DateTime               @default(now())\n  appointment     Appointment            @relation(fields: [appointment_id], references: [appointment_id])\n  serviceProvider ServiceProviderDetails @relation(fields: [provider_id], references: [provider_id])\n  user            User                   @relation(fields: [user_id], references: [user_id])\n}\n\nmodel OTPVerification {\n  id         Int      @id @default(autoincrement())\n  email      String\n  otp        String\n  expires_at DateTime\n  created_at DateTime @default(now())\n}\n\nmodel Admin {\n  admin_id             Int       @id @default(autoincrement())\n  admin_username       String    @unique\n  admin_email          String    @unique\n  admin_password       String\n  admin_name           String\n  admin_role           String    @default(\"admin\")\n  created_at           DateTime  @default(now())\n  last_login           DateTime?\n  is_active            Boolean   @default(true)\n  must_change_password Boolean   @default(true)\n}\n\nmodel Conversation {\n  conversation_id Int                    @id @default(autoincrement())\n  appointment_id  Int                    @unique\n  customer_id     Int\n  provider_id     Int\n  status          String                 @default(\"active\") // active, archived, closed\n  last_message_at DateTime?\n  created_at      DateTime               @default(now())\n  updated_at      DateTime               @updatedAt\n  appointment     Appointment            @relation(fields: [appointment_id], references: [appointment_id])\n  customer        User                   @relation(fields: [customer_id], references: [user_id])\n  provider        ServiceProviderDetails @relation(fields: [provider_id], references: [provider_id])\n  messages        Message[]\n}\n\nmodel Message {\n  message_id      Int          @id @default(autoincrement())\n  conversation_id Int\n  sender_id       Int\n  sender_type     String // 'customer' or 'provider'\n  message_type    String       @default(\"text\") // text, image, file, location\n  content         String\n  attachment_url  String?\n  is_read         Boolean      @default(false)\n  is_edited       Boolean      @default(false)\n  edited_at       DateTime?\n  replied_to_id   Int? // For reply functionality\n  created_at      DateTime     @default(now())\n  updated_at      DateTime     @updatedAt\n  conversation    Conversation @relation(fields: [conversation_id], references: [conversation_id])\n  replied_to      Message?     @relation(\"MessageReplies\", fields: [replied_to_id], references: [message_id])\n  replies         Message[]    @relation(\"MessageReplies\")\n}\n",
  "inlineSchemaHash": "645a913cbc9650617c75cf2ff3045fd7649dc49005b65bd4e8690007561e2849",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valid_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_activated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"birthday\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"exact_location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToUser\"},{\"name\":\"user_rating\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToUser\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToUser\"}],\"dbName\":null},\"ServiceProviderDetails\":{\"fields\":[{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider_first_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_last_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_profile_photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_valid_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"provider_rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"provider_location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_uli\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_isActivated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"provider_birthday\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"provider_exact_location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToServiceProviderDetails\"},{\"name\":\"provider_availability\",\"kind\":\"object\",\"type\":\"Availability\",\"relationName\":\"AvailabilityToServiceProviderDetails\"},{\"name\":\"provider_certificates\",\"kind\":\"object\",\"type\":\"Certificate\",\"relationName\":\"CertificateToServiceProviderDetails\"},{\"name\":\"provider_ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"RatingToServiceProviderDetails\"},{\"name\":\"provider_services\",\"kind\":\"object\",\"type\":\"ServiceListing\",\"relationName\":\"ServiceListingToServiceProviderDetails\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToServiceProviderDetails\"},{\"name\":\"provider_professions\",\"kind\":\"object\",\"type\":\"ProviderProfession\",\"relationName\":\"ProviderProfessionToServiceProviderDetails\"}],\"dbName\":null},\"Certificate\":{\"fields\":[{\"name\":\"certificate_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"certificate_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificate_file_path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiry_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"certificate_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificate_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"ServiceProviderDetails\",\"relationName\":\"CertificateToServiceProviderDetails\"},{\"name\":\"certificate_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CoveredService\",\"kind\":\"object\",\"type\":\"CoveredService\",\"relationName\":\"CertificateToCoveredService\"}],\"dbName\":null},\"ServiceListing\":{\"fields\":[{\"name\":\"service_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"service_title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service_description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service_startingprice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"servicelisting_isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"service_photos\",\"kind\":\"object\",\"type\":\"ServicePhoto\",\"relationName\":\"ServiceListingToServicePhoto\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToServiceListing\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProviderDetails\",\"relationName\":\"ServiceListingToServiceProviderDetails\"},{\"name\":\"specific_services\",\"kind\":\"object\",\"type\":\"SpecificService\",\"relationName\":\"ServiceListingToSpecificService\"}],\"dbName\":null},\"ServicePhoto\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"ServiceListing\",\"relationName\":\"ServiceListingToServicePhoto\"},{\"name\":\"service_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ServiceCategory\":{\"fields\":[{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specific_services\",\"kind\":\"object\",\"type\":\"SpecificService\",\"relationName\":\"ServiceCategoryToSpecificService\"}],\"dbName\":null},\"ProviderProfession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profession\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"ServiceProviderDetails\",\"relationName\":\"ProviderProfessionToServiceProviderDetails\"}],\"dbName\":null},\"SpecificService\":{\"fields\":[{\"name\":\"specific_service_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specific_service_title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specific_service_description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"covered_by_certificates\",\"kind\":\"object\",\"type\":\"CoveredService\",\"relationName\":\"CoveredServiceToSpecificService\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"ServiceCategory\",\"relationName\":\"ServiceCategoryToSpecificService\"},{\"name\":\"serviceListing\",\"kind\":\"object\",\"type\":\"ServiceListing\",\"relationName\":\"ServiceListingToSpecificService\"}],\"dbName\":null},\"CoveredService\":{\"fields\":[{\"name\":\"covered_service_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specific_service_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"certificate_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"certificate\",\"kind\":\"object\",\"type\":\"Certificate\",\"relationName\":\"CertificateToCoveredService\"},{\"name\":\"specific_service\",\"kind\":\"object\",\"type\":\"SpecificService\",\"relationName\":\"CoveredServiceToSpecificService\"}],\"dbName\":null},\"Availability\":{\"fields\":[{\"name\":\"availability_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dayOfWeek\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"availability_isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToAvailability\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProviderDetails\",\"relationName\":\"AvailabilityToServiceProviderDetails\"}],\"dbName\":null},\"Appointment\":{\"fields\":[{\"name\":\"appointment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"appointment_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduled_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"repairDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"final_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"availability_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"service_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cancellation_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availability\",\"kind\":\"object\",\"type\":\"Availability\",\"relationName\":\"AppointmentToAvailability\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AppointmentToUser\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProviderDetails\",\"relationName\":\"AppointmentToServiceProviderDetails\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"ServiceListing\",\"relationName\":\"AppointmentToServiceListing\"},{\"name\":\"appointment_rating\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"AppointmentToRating\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"AppointmentToConversation\"}],\"dbName\":null},\"Rating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating_value\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating_comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating_photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rated_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToRating\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProviderDetails\",\"relationName\":\"RatingToServiceProviderDetails\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RatingToUser\"}],\"dbName\":null},\"OTPVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"last_login\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"must_change_password\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Conversation\":{\"fields\":[{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"appointment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"provider_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_message_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToConversation\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationToUser\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"ServiceProviderDetails\",\"relationName\":\"ConversationToServiceProviderDetails\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"message_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachment_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_edited\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"edited_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"replied_to_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"replied_to\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageReplies\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageReplies\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

